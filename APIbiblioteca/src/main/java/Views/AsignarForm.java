/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import Service.ApiService;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import Models.Autor;
import Models.Libro;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author USUARIO
 */
public class AsignarForm extends javax.swing.JFrame {

    /**
     * Creates new form AsignarForm
     */

    public AsignarForm() throws IOException {
        initComponents();
        cargarTabla();
        cargarListaLibros();
        cargarComboAutores();
    }

    private List<Autor> autores;
    private List<Libro> libros;

/*private void cargarComboAutores() throws IOException {
    autores = ApiService.obtenerAutores();
    DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
    for (Autor autor : autores) {
        modelo.addElement(autor.toString()); // O autor.toString()
    }
    comboAutores.setModel(modelo);
}*/
    private void cargarComboAutores() throws IOException {
    autores = ApiService.obtenerAutores(); 

    DefaultComboBoxModel<String> modelo = new DefaultComboBoxModel<>();
    for (Autor autor : autores) {
        modelo.addElement(autor.nombre); 
    }
    comboAutores.setModel(modelo);
}



private Autor obtenerAutorSeleccionado() {
    int indice = comboAutores.getSelectedIndex();
    if (indice >= 0 && indice < autores.size()) {
        return autores.get(indice);
    }
    return null; 
}

    private void cargarListaLibros() throws IOException {
    libros = ApiService.obtenerLibros();
    DefaultListModel<String> modelo = new DefaultListModel<>();
    for (Libro libro : libros) {
        modelo.addElement(libro.toString()); 
    }
    ListaLibros.setModel(modelo);
    ListaLibros.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
}


private List<Libro> obtenerLibrosSeleccionados() {
    int[] indices = ListaLibros.getSelectedIndices();
    List<Libro> seleccionados = new ArrayList<>();
    for (int i : indices) {
        if (i >= 0 && i < libros.size()) {
            seleccionados.add(libros.get(i));
        }
    }
    return seleccionados;
}


    private void cargarTabla() {
        try {
            List<Autor> autores = ApiService.obtenerAutores();

            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("Nacionalidad");

            for (Autor autor : autores) {
                modelo.addRow(new Object[]{
                    autor.id_autor,
                    autor.nombre,
                    autor.apellido,
                    autor.nacionalidad
                });
            }

            this.tablaAutores.setModel(modelo);
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar libros");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAutores = new javax.swing.JTable();
        comboAutores = new javax.swing.JComboBox<>();
        btnAsignar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaLibros = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaAutores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaAutores);

        comboAutores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAsignar.setText("Asignar");
        btnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarActionPerformed(evt);
            }
        });

        ListaLibros.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(ListaLibros);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(comboAutores, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnAsignar)
                        .addGap(12, 12, 12)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboAutores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAsignar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarActionPerformed
        int index = comboAutores.getSelectedIndex();
    if (index == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione un autor.");
        return;
    }

    Autor autorSeleccionado = autores.get(index); 

    int[] indicesSeleccionados = ListaLibros.getSelectedIndices();
    if (indicesSeleccionados.length == 0) {
        JOptionPane.showMessageDialog(this, "Seleccione al menos un libro.");
        return;
    }

    for (int i : indicesSeleccionados) {
        Libro libro = libros.get(i); 
            try {
                ApiService.asignarAutorALibro(libro.id_libro, autorSeleccionado.id_autor);
            } catch (IOException ex) {
                Logger.getLogger(AsignarForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    JOptionPane.showMessageDialog(this, "Libros asignados correctamente al autor.");
    }//GEN-LAST:event_btnAsignarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignarForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AsignarForm().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(AsignarForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListaLibros;
    private javax.swing.JButton btnAsignar;
    private javax.swing.JComboBox<String> comboAutores;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaAutores;
    // End of variables declaration//GEN-END:variables
}
